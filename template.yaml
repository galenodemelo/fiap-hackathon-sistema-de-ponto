AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sistema de Ponto para o Hackathon FIAP - SOAT2

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: java17
    Architectures:
      - x86_64
    Environment:
      Variables:
#        DB_URL: jdbc:mysql://10.0.1.105:3307/techchallenge
#        DB_USERNAME: root
#        DB_PASSWORD: senha
#        SMTP_FROM: fiapsoat@gmail.com
#        SMTP_PASSWORD: tuck xugf wvym nqwh
#        SQS_ENDPOINT: http://10.0.1.105:4566/
        DB_URL: jdbc:mysql://punchtest.ctcse82u4h4m.us-east-1.rds.amazonaws.com:3306/techchallenge
        DB_USERNAME: root
        DB_PASSWORD: 12345678
        SMTP_FROM: fiapsoat@gmail.com
        SMTP_PASSWORD: tuck xugf wvym nqwh

Resources:

  ApiGateway:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: LoginAuthorizer
        Authorizers:
          LoginAuthorizer:
            FunctionArn: !GetAtt AuthorizerFunction.Arn
            AuthorizerPayloadFormatVersion: "1.0"
            Identity:
              Headers:
                - Authorization

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: arn:aws:iam::339712985210:role/LabRole
      CodeUri: handlers
      Handler: br.com.fiap.authorizer.AuthorizerHandler::handleRequest

  ListPunchesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: arn:aws:iam::339712985210:role/LabRole
      CodeUri: handlers
      Handler: br.com.fiap.ListPunchesHandler::handleRequest
      Events:
        ListPunches:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /punch
            Method: get

  RegisterPunchFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: arn:aws:iam::339712985210:role/LabRole
      CodeUri: handlers
      Handler: br.com.fiap.RegisterPunchHandler::handleRequest
      Events:
        RegisterPunch:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /punch
            Method: post

  AskForReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: arn:aws:iam::339712985210:role/LabRole
      CodeUri: handlers
      Handler: br.com.fiap.AskForReportHandler::handleRequest
      Events:
        AskForReport:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
            Path: /report
            Method: post

  ReportQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: report-q

  GenerateReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      Role: arn:aws:iam::339712985210:role/LabRole
      CodeUri: handlers
      Handler: br.com.fiap.GenerateReportHandler::handleRequest
      Events:
        GenerateReport:
          Type: SQS
          Properties:
            Queue: !GetAtt ReportQueue.Arn
            BatchSize: 1
